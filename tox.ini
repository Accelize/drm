# Tests runner

[tox]
minversion = 3.7.0
envlist = {build,c,cpp}-{debug,release,install}, coverage-debug
skipsdist = true

[testenv]
whitelist_externals = *
skip_install = True
isolated_build = False
sitepackages = True
recreate = False
install_command = python -m pip install -U {opts} {packages}

description =
    build: Accelize DRM library, build
    {c,cpp}: Accelize DRM Library tests ({envname})
    coverage: Combine coverage data and create report

deps =
    cython
    wheel
    setuptools
    pytest
    debug: pytest-cov
    debug: coverage
    debug: codecov

setenv =
    !install: PYTHONPATH = {env:PYTHONPATH:}{:}{envdir}/build/python3_bdist
    !install: LD_LIBRARY_PATH = /usr/local/lib64:{envdir}/build
    install: LD_LIBRARY_PATH = /usr/local/lib64
    {c,cpp}-debug: COVERAGE_FILE = {envdir}/build/.coverage.{envname}
    CODECOV_TOKEN=0609d115-bdba-45b7-8cf1-01cfa4878fed

passenv=
    coverage: CODECOV_*

envdir =
    debug: {toxworkdir}/debug
    !debug: {toxworkdir}/release

changedir =
    !install: {envdir}/build
    install: {toxinidir}

commands =
    # Build
    build-debug: python -m coverage erase
    build-debug: cmake -DPYTHON3=ON -DTESTS=ON -DCMAKE_BUILD_TYPE=Debug -DCOVERAGE=ON {toxinidir}
    build-release: cmake -DPYTHON3=ON -DTESTS=ON {toxinidir}
    build-install: cmake -DPYTHON3=ON -DTESTS=ON -DDOC=ON {toxinidir}
    build: make -s -j
    build-install: sudo make install prefix=/usr
    build-install: make package
    # Run tests
    c-!debug: python -m pytest {posargs} --backend=c
    c-debug: python -m pytest {posargs} --backend=c --cov=accelize_drm
    cpp-!debug: python -m pytest {posargs} --backend=c++
    cpp-debug: python -m pytest {posargs} --backend=c++ --cov=accelize_drm
    # Collect coverage
    coverage: -python -m coverage combine
    coverage: -lcov --capture --directory . --output-file coverage.info -q
    coverage: -lcov -r coverage.info '/usr/include/*' '*/drm_controller_sdk/*' -o coverage.info -q
    # Produce HTML coverage report
    coverage: -python -m coverage html -d report/coverage_python
    coverage: -genhtml coverage.info -q --legend -o report/coverage_c_cpp
    # Upload coverage status
    coverage: -python -m coverage xml
    coverage: -ln -s {toxinidir}/.git .
    coverage: -python -m codecov -f coverage.xml coverage.info
    # Show coverage summary
    coverage: -python -m coverage report -m
    coverage: -lcov --list coverage.info

depends =
    {c,cpp}-debug: build-debug
    c-release: build-release, c-debug
    cpp-release: build-release, cpp-debug
    build-install: build-release, c-release, cpp-release
    {c,cpp}-install: build-install
    coverage: cpp-debug, c-debug, c-release, cpp-release, c-install, cpp-install
