---
name: Compile, Test, Package, Release

trigger:
  batch: true
  branches:
    include:
      - master
      - dev
  tags:
    include:
      # Only tags that are a version release
      - v*
  paths:
    exclude:
      - doc/*
      - README.md
      - .gitignore
      - LICENSE
      - deployment/README.md
      - deployment/release.py
      - deployment/azure-pipelines-docs.yml

pr: none

resources:
  repositories:
    - repository: acid
      type: github
      name: Accelize/acid
      endpoint: Accelize
      ref: refs/heads/v1

pool:
  vmImage: ubuntu-20.04

variables:
  - group: drmLibrary

  # Allow import of python files in "deployment" dir
  - name: pythonPath
    value: $(Build.SourcesDirectory)/deployment

stages:
  - stage: compile_and_test
    displayName: Compile sources and test multiple hardware designs
    variables:
      # Set Git branch conditional variables
      ${{ if eq(variables['Build.SourceBranch'], 'refs/heads/master') }}:
        meteringServer: prod
      ${{ if ne(variables['Build.SourceBranch'], 'refs/heads/master') }}:
        meteringServer: dev
      ${{ if startsWith(variables['Build.SourceBranch'], 'refs/tags') }}:
        tox_mark: '-m minimum'
      ${{ if not(startsWith(variables['Build.SourceBranch'], 'refs/tags')) }}:
        tox_mark: ''

    jobs:
      - template: runTestOnEc2.yml
        parameters:
          identifier: full_features_on_single_design
          description: full features on single design
          instance_type: 'f1.4xlarge'
          config_list:
          - os_distrib: 'centos_7'
            tox_operation: '-p all -e aws-build-debug,cpp-debug,c-debug,noparallel-debug,coverage-debug'
            tox_extra_option: '$(tox_mark)'
          #- os_distrib: 'ubuntu_18_04'
          #  tox_operation: 'aws-build-debug,cpp-debug,c-debug,noparallel-debug,coverage-debug'
          #  tox_extra_option: '$(tox_mark)'
          #  dependsOn: 'centos_7'

      - template: runTestOnEc2.yml
        parameters:
          identifier: awsxrt_specific_designs
          description:  AWS XRT specific designs
          instance_type: 'f1.4xlarge'
          config_list:
          - os_distrib: 'centos_7'
            tox_operation: '-e aws-build-debug,awsxrt-debug'
            tox_extra_option: '$(tox_mark)'
          #- os_distrib: 'ubuntu_18_04'
          #  tox_operation: '-e aws-build-debug,awsxrt-debug'
          #  tox_extra_option: '$(tox_mark)'
          #  dependsOn: 'centos_7'

      - template: runTestOnEc2.yml
        parameters:
          identifier: awsf1_specific_designs
          description: AWS F1 specific designs
          instance_type: 'f1.2xlarge'
          config_list:
          - os_distrib: 'centos_7'
            tox_operation: '-e aws-build-debug,awsf1-debug'
            tox_extra_option: '$(tox_mark)'
          #- os_distrib: 'ubuntu_18_04'
          #  tox_operation: '-e aws-build-debug,awsf1-debug'
          #  tox_extra_option: '$(tox_mark)'
          #  dependsOn: 'centos_7'

  - stage: build_packages
    displayName: Create packages
    # Build packages only if tagged or scheduled
    dependsOn: compile_and_test
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'))
    jobs:
      - template: buildPackages.yml

  - stage: release_packages
    displayName: Release packages
    # Build packages only if tagged and not scheduled
    dependsOn: build_packages
    condition: and(succeeded(), startsWith(variables['Build.SourceBranch'], 'refs/tags'), ne(variables['Build.Reason'], 'Schedule'))
    jobs:
      - deployment: publishPackages
        displayName: Publish release
        # Performs release only if not scheduled
        environment: drmLibrary
        pool:
          vmImage: ubuntu-latest
        variables:
          ${{ if not(contains(variables['Build.SourceBranch'], '-')) }}:
            ReleaseChannel: stable
          ${{ if contains(variables['Build.SourceBranch'], '-') }}:
            ReleaseChannel: prerelease

        strategy:
          runOnce:
            deploy:
              steps:

                # Publish packages

                - task: AWSCLI@1
                  displayName: Publish packages
                  inputs:
                    awsCredentials: AWS-Repository
                    regionName: eu-west-1
                    awsCommand: s3
                    awsSubCommand: sync
                    awsArguments: . s3://accelize/t/$(ReleaseChannel)/ --no-progress --exclude "*" --include "*.deb" --include "*.rpm"

                # Publish the release on GitHub
                - checkout: self
                  fetchDepth: 1

                - task: UsePythonVersion@0
                  inputs:
                    versionSpec: '3.x'
                    addToPath: true
                    architecture: 'x64'
                  displayName: Get Python

                - task: PythonScript@0
                  displayName: Get DRM library version
                  inputs:
                    scriptSource: inline
                    script: |
                      from azure_pipeline_utils import get_drm_version, setvariable
                      setvariable("version", get_drm_version())
                  name: libraryVersion

                - task: GitHubRelease@1
                  displayName: Publish GitHub release
                  inputs:
                    gitHubConnection: Accelize-application
                    repositoryName: $(Build.Repository.Name)
                    action: create
                    target: $(Build.SourceVersion)
                    tagSource: gitTag
                    tagPattern: v[0-9]+\.[0-9]+\.[0-9]+
                    isPreRelease: contains($(libraryVersion.version), '-')
                    releaseNotesSource: inline
                    releaseNotesInline: |
                      Release of version $(libraryVersion.version).

                      Packages available on Accelize repository.

                      See the [documentation](https://tech.accelize.com/documentation/stable/) for more information.
                    changeLogCompareToRelease: lastFullRelease
                    changeLogType: commitBased
