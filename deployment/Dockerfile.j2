# Define Packages build environments for all supported OS
# Used in the "Release" stage of "azure-pipeline.yml"

FROM {{ image }}

ENV PACKAGES_DIR /opt/packages
ENV TOX_PARALLEL_NO_SPINNER 1

# "Building" and "Testing" common layer
RUN \
{%- if osName == "rhel" and osVersion in ("7", "8") %}
subscription-manager register \
    --auto-attach \
    --name=AccelizeDrmTestRhel{{ osVersion }} \
    --username={{ rhelUsername }} \
    --password={{ rhelPassword }} && \
{%- endif %}
{%- if osName in ("centos", "rhel") and osVersion == "7" %}
yum install -y \
    https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ osVersion }}.noarch.rpm \
    yum-plugin-fastestmirror && \
yum install -y \
{%- elif osName in ("fedora", "centos", "rhel") %}
echo "max_parallel_downloads=10" >> /etc/dnf/dnf.conf && \
echo "install_weak_deps=False" >> /etc/dnf/dnf.conf && \
{%- if osName in ("centos", "rhel") %}
dnf install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{ osVersion }}.noarch.rpm && \
{%- endif %}
dnf install -y \
{%- elif osName in ("debian", "ubuntu") %}
echo "APT::Install-Recommends "0";" >> /etc/apt/apt.conf.d/no-recommend && \
echo "APT::Install-Suggests "0";" >> /etc/apt/apt.conf.d/no-recommend && \
echo "APT::Acquire::Queue-Mode "access";" >> /etc/apt/apt.conf.d/parallel && \
echo "APT::Acquire::Retries 10;" >> /etc/apt/apt.conf.d/parallel && \
apt-get update && \
apt-get install -y \
{%- endif %}
{%- if osName in ("debian", "ubuntu") and osVersion not in ("10", "18.04") %}
    python-is-python3 \
{%- endif %}
    python3-pip && \
{%- if osName == "rhel" and osVersion in ("7", "8") %}
subscription-manager remove --all && \
subscription-manager unregister && \
subscription-manager clean && \
{%- endif %}
echo "[global]" > /etc/pip.conf && \
echo "disable-pip-version-check = true " >> /etc/pip.conf && \
python3 -m pip install -U{% if osName in ("centos", "rhel") and osVersion == "7" %} --prefix='/usr'{% endif %} \
    pip \
    setuptools && \
python3 -m pip install -U{% if osName in ("centos", "rhel") and osVersion == "7" %} --prefix='/usr'{% endif %} \
    cython \
    flake8 \
    pytest \
    requests \
    flask \
    python-dateutil \
    pytest-flask \
    tox \
    urllib3 \
    wheel

{%- if buildLayer %}
# "Building" only layer
RUN \
{%- if osName == "rhel" and osVersion in ("7", "8") %}
subscription-manager register \
    --auto-attach \
    --name=AccelizeDrmTestRhel{{ osVersion }} \
    --username={{ rhelUsername }} \
    --password={{ rhelPassword }} && \
{%- endif %}
{%- if osName in ("centos", "fedora", "rhel") and osVersion != "7" %}
dnf install -y \
{%- elif osName in ("centos", "rhel") and osVersion == "7" %}
yum install -y \
{%- elif osName in ("debian", "ubuntu") %}
apt-get install -y \
{%- endif %}
    make \
{%- if osName in ("debian", "ubuntu") %}
    dpkg-dev \
    file \
    g++ \
    libcurl4-openssl-dev \
    libjsoncpp-dev \
    pkg-config \
    python3-dev && \
{%- elif osName in ("centos", "fedora", "rhel") %}
    gcc \
    gcc-c++ \
    jsoncpp-devel \
    libcurl-devel \
    python3-devel \
    rpm-build && \
{%- endif %}
{%- if osName == "rhel" and osVersion in ("7", "8") %}
subscription-manager remove --all && \
subscription-manager unregister && \
subscription-manager clean && \
{%- endif %}
python3 -m pip install -U{% if osName in ("centos", "rhel") and osVersion == "7" %} --prefix='/usr'{% endif %} \
    cmake \
{%- endif %}
