---
# runTestOnEc2.yml

parameters:
  identifier: 'test_on_aws'
  description: 'Test on AWS'
  instance_type: 'f1.4xlarge'
  config_list:
  - os_distrib: 'centos_7'
    tox_operation: '-e aws-build-debug,cpp-debug,c-debug,noparallel-debug,coverage-debug'
    tox_extra_option: ''

jobs:
- ${{ each config in parameters.config_list }}: # For each config
  # Start AWS agents
  - template: agents/start.yml@acid
    parameters:
      jobName: startAgent_${{ parameters.identifier }}_on_${{ config.os_distrib }}
      agentDescription: ${{ parameters.description }} on AWS ${{ config.os_distrib }}
      provider: awsEc2
      image: ${{ config.os_distrib }}
      instanceType: ${{ parameters.instance_type }}
      agentVersion: 2.175.2
      ansiblePlaybook: deployment/playbook.yml
      ansibleRequirements: deployment/requirements.yml
      dependsOn:
      - ${{ if config.dependsOn }}:
        - runTests_${{ parameters.identifier }}_on_${{ config.dependsOn }}
      condition: succeededOrFailed()

  # Run tests on AWS agent
  - job: runTests_${{ parameters.identifier }}_on_${{ config.os_distrib }}
    timeoutInMinutes: 120
    displayName: Test ${{ parameters.description }} on ${{ config.os_distrib }}
    dependsOn: startAgent_${{ parameters.identifier }}_on_${{ config.os_distrib }}
    condition: succeededOrFailed()
    pool:
      name: Default
      demands:  # Use previously instantiated agent
        - agent.Name -equals $(Build.BuildId) ${{ parameters.description }} on AWS ${{ config.os_distrib }}
    steps:
      - checkout: self
        submodules: true

      - script: |
          cat << EOF > $(Build.SourcesDirectory)/cred.json
          {
            "client_id": "$(clientIdAccelizeAcceleratorTest2)",
            "client_secret": "$(clientSecretAccelizeAcceleratorTest2)",

            "name__admin__":"Admin_JBL_Regression",
            "client_id__admin__":"$(clientIdAdmin)",
            "client_secret__admin__":"$(clientSecretAdmin)",

            "client_id__accelize_accelerator_test_01__":
              "$(clientIdAccelizeAcceleratorTest1)",
            "client_secret__accelize_accelerator_test_01__":
              "$(clientSecretAccelizeAcceleratorTest1)",
            "email__accelize_accelerator_test_01__":
              "$(mailAccelizeAcceleratorTest1)",

            "client_id__accelize_accelerator_test_02__":
              "$(clientIdAccelizeAcceleratorTest2)",
            "client_secret__accelize_accelerator_test_02__":
              "$(clientSecretAccelizeAcceleratorTest2)",
            "email__accelize_accelerator_test_02__":
              "$(mailAccelizeAcceleratorTest2)",

            "client_id__accelize_accelerator_test_03__":
              "$(clientIdAccelizeAcceleratorTest3)",
            "client_secret__accelize_accelerator_test_03__":
              "$(clientSecretAccelizeAcceleratorTest3)",
            "email__accelize_accelerator_test_03__":
              "$(mailAccelizeAcceleratorTest3)",

            "client_id__accelize_accelerator_test_04__":
              "$(clientIdAccelizeAcceleratorTest4)",
            "client_secret__accelize_accelerator_test_04__":
              "$(clientSecretAccelizeAcceleratorTest4)",
            "email__accelize_accelerator_test_04__":
              "$(mailAccelizeAcceleratorTest4)"
          }
          EOF
        displayName: Create Accelize credentials file

      - script: sudo -E tox ${{ config.tox_operation }}
                -- --cred=$(Build.SourcesDirectory)/cred.json --server=$(meteringServer) --artifacts_dir=$(Build.SourcesDirectory)/artifacts -ra ${{ config.tox_extra_option }}
        displayName: Run tests with Tox
        env:
          CODECOV_TOKEN: $(codecovToken)
          TOX_PARALLEL_NO_SPINNER: 1
          SDK_DIR: /opt/aws_fpga/sdk

      - publish: $(Build.SourcesDirectory)/artifacts
        artifact: AWS_Artifacts_${{ parameters.identifier }}_on_${{ config.os_distrib }}
        displayName: Publish AWS Artifacts for ${{ parameters.identifier }} on ${{ config.os_distrib }} tests
        condition: always()

  # Stop AWS agent
  - template: agents/stop.yml@acid
    parameters:
      jobName: stopAgent_${{ parameters.identifier }}_on_${{ config.os_distrib }}
      provider: awsEc2
      agentDescription: ${{ parameters.description }} on AWS ${{ config.os_distrib }}
      dependsOn: runTests_${{ parameters.identifier }}_on_${{ config.os_distrib }}
