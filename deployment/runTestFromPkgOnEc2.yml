---
# runTestFromPkgOnEc2.yml

parameters:
  instance_type: 'f1.4xlarge'
  config_list:
  - os_distrib: 'centos_7'
    tox_extra_option: ''

jobs:
- ${{ each config in parameters.config_list }}: # For each config
  # Start AWS agents
  - template: agents/start.yml@acid
    parameters:
      jobName: startAgent_Aws_${{ config.os_distrib }}
      agentDescription: AWS with ${{ config.os_distrib }}
      provider: awsEc2
      image: ${{ config.os_distrib }}
      instanceType: ${{ parameters.instance_type }}
      acidDir: $(Build.SourcesDirectory)/deployment/acid
      ansiblePlaybook: $(Build.SourcesDirectory)/deployment/playbook.yml
      dependsOn:
      - ${{ if config.dependsOn }}:
        - runTests_Aws_${{ config.dependsOn }}
      condition: succeededOrFailed()

  # Install Package on AWS agent
  - job: runTests_Aws_${{ config.os_distrib }}
    displayName: Install and run tests on AWS with ${{ config.os_distrib }}
    dependsOn:
      - startAgent_Aws_${{ config.os_distrib }}
    pool:
      name: Default
      demands:  # Use previously instantiated agent
        - agent.Name -equals $(Build.BuildId) $(Build.DefinitionName) AWS with ${{ config.os_distrib }}
    steps:
      - checkout: self
        submodules: true

      - script: |
          cat << EOF > $(Build.SourcesDirectory)/cred.json
          {
            "client_id": "$(clientIdAccelizeAcceleratorTest2)",
            "client_secret": "$(clientSecretAccelizeAcceleratorTest2)",

            "name__admin__":"Admin_JBL_Regression",
            "client_id__admin__":"$(clientIdAdmin)",
            "client_secret__admin__":"$(clientSecretAdmin)",

            "client_id__accelize_accelerator_test_01__":
              "$(clientIdAccelizeAcceleratorTest1)",
            "client_secret__accelize_accelerator_test_01__":
              "$(clientSecretAccelizeAcceleratorTest1)",
            "email__accelize_accelerator_test_01__":
              "$(mailAccelizeAcceleratorTest1)",

            "client_id__accelize_accelerator_test_02__":
              "$(clientIdAccelizeAcceleratorTest2)",
            "client_secret__accelize_accelerator_test_02__":
              "$(clientSecretAccelizeAcceleratorTest2)",
            "email__accelize_accelerator_test_02__":
              "$(mailAccelizeAcceleratorTest2)",

            "client_id__accelize_accelerator_test_03__":
              "$(clientIdAccelizeAcceleratorTest3)",
            "client_secret__accelize_accelerator_test_03__":
              "$(clientSecretAccelizeAcceleratorTest3)",
            "email__accelize_accelerator_test_03__":
              "$(mailAccelizeAcceleratorTest3)",

            "client_id__accelize_accelerator_test_04__":
              "$(clientIdAccelizeAcceleratorTest4)",
            "client_secret__accelize_accelerator_test_04__":
              "$(clientSecretAccelizeAcceleratorTest4)",
            "email__accelize_accelerator_test_04__":
              "$(mailAccelizeAcceleratorTest4)"
          }
          EOF
        displayName: Create Accelize credentials file

      - script: |
          sudo yum install -y yum-utils
          sudo yum-config-manager --add-repo https://tech.accelize.com/rpm/accelize_stable.repo
          sudo yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-7.noarch.rpm
          sudo yum install -y python3-accelize-drm
          sudo yum install -y libaccelize-drm
          sudo yum install -y libaccelize-drm-devel
        displayName: Install drmlib from package on ${{ config.os_distrib }}
        condition: ${{ contains(config.os_distrib, 'centos') }}

      - script: |
          sudo apt update
          sudo apt install -y apt-transport-https software-properties-common lsb-release gnupg curl
          curl -fsSL https://tech.accelize.com/gpg | sudo apt-key add -
          sudo add-apt-repository "deb https://tech.accelize.com/deb $(lsb_release -cs) stable"
          sudo apt update
          sudo apt install -y python3-accelize-drm
          sudo apt install -y libaccelize-drm
          sudo apt install -y libaccelize-drm-dev
        displayName: Install drmlib from package on ${{ config.os_distrib }}
        condition: ${{ contains(config.os_distrib, 'ubuntu') }}

      - script: sudo -E tox -p all -e cpp-install,cpp-install,integration-install
                -- --cred=$(Build.SourcesDirectory)/cred.json --server=prod --artifacts_dir=$(Build.SourcesDirectory)/artifacts -rxs ${{ config.tox_extra_option }}
        displayName: Run tests from package with Tox on ${{ config.os_distrib }}
        env:
          TOX_PARALLEL_NO_SPINNER: 1

      - publish: $(Build.SourcesDirectory)/artifacts
        artifact: AWS_Artifacts_${{ config.os_distrib }}
        displayName: Publish AWS Artifacts for ${{ config.os_distrib }} package tests
        condition: always()

  # Stop AWS agent
  - template: agents/stop.yml@acid
    parameters:
      jobName: stopAgent_Aws_${{ config.os_distrib }}
      provider: awsEc2
      agentDescription: AWS with ${{ config.os_distrib }}
      acidDir: $(Build.SourcesDirectory)/deployment/acid
      dependsOn: runTests_Aws_${{ config.os_distrib }}
